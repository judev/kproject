#!/usr/bin/env bash
# vim: ft=sh et sw=2 ts=2

set -eo pipefail

THIS=$BASH_SOURCE
while test -L "$THIS"
do
  THIS=$(readlink "$THIS")
done
HERE=$(dirname "$THIS")

if [ "$1" == "check" ]
then
  shift
  "$HERE/lib/check-dev-environment.sh"
  exit
elif [ "$1" == "init" ]
then
  shift
  "$HERE/lib/setup-dev-environment.sh" $*
  exit
elif [ -z "$PROJECT_ROOT_PATH" ]
then
  bash "$BASH_SOURCE" init $@
  exit
fi

. $HERE/lib/log.inc.sh
. $HERE/lib/require.inc.sh
. $HERE/lib/ps1_functions.inc.sh
. $HERE/lib/config_functions.inc.sh
. $HERE/lib/command_functions.inc.sh

completion_bash() {
  cat "$(dirname "$BASH_SOURCE")/lib/kproject_completion_bash.inc.sh"
}

config_init "$PROJECT_ROOT_PATH"

usage() {
  cat 1>&2 <<EOT
Usage: $0 group [options] command

Group may be one of:
  env | secrets | container | chart | service | app

env commands:
  list
  use config_name

$(
for group in container chart service secrets app exec
do
  cmds=$(command_list "$group")
  if [ -n "$cmds" ]
  then
    echo "$group commands:"
    while read name
    do
      help=$(command_help "$group" "$name")
      if [ -n "$help" ]
      then

        i=""
        while IFS='' read -r line || [[ -n "$line" ]]; do
          if [ -z "$i" ]
          then
            printf "  %-30s - %s\n" "$(tr '/' ' ' <<<"$name")" "$line"
            i="1"
          else
            printf "  %-30s   %s\n" "" "$line"
          fi
        done <<<"$help"

      fi
    done <<<"$cmds"
    echo
  fi
done
)

EOT
  exit 1
}

config() {

  cmd=$1
  shift
  case ${cmd} in

    list )
      config_list "$@"
      ;;

    use )
      config_use "$@"
      ;;

    -h|--help|help|* )
      usage
      ;;

  esac

}

completion() {

  format=$1
  shift
  case ${format} in

    bash )
      completion_bash
      ;;

    *)
      usage
      ;;
  esac

}

main() {

  group=$1

  case ${group} in

    env)
      shift
      config "$@"
      ;;

    completion)
      shift
      completion "$@"
      ;;

    command-path )
      shift
      command_root_path "$1"
      ;;

    chart | container | app | service | gcloud | secrets | exec )
      shift
      if [ "$1" == "--list-commands" ]
      then
        command_list "${group}"
      else
        command_call "${group}" "$@"
      fi
      ;;

    -h|--help|help|* )
      usage
      ;;
  esac

}

main "${@:-}"


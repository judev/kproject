#!/usr/bin/env bash

set -eo pipefail

config_get_minikube

PUSH=""
if grep -Fq '\--push' <<<"$*"
then
  PUSH="1"
fi

kproject gcloud docker-login

for CONTAINER_PATH in $@
do
  if [ "$CONTAINER_PATH" != "--push" ]
  then
    CONTAINER_PATH=$(kproject container path "$CONTAINER_PATH")
    if [ -f "$CONTAINER_PATH/Dockerfile" ]
    then
      IMAGE="$(basename "$CONTAINER_PATH")"

      date +'%y%m%d.%H%M%S' > "$CONTAINER_PATH/VERSION"
      VERSION=$(cat "$CONTAINER_PATH"/VERSION)

      test -x "$CONTAINER_PATH/build.sh" && "$CONTAINER_PATH/build.sh"

      docker build -t $DOCKER_REPO/$IMAGE:latest $CONTAINER_PATH
      docker tag $DOCKER_REPO/$IMAGE:latest $DOCKER_REPO/$IMAGE:$VERSION

      info "Built $DOCKER_REPO/$IMAGE:$VERSION"

      F="$PROJECT_ROOT_PATH/services/${ENVIRONMENT_NAME}-cluster.yaml"
      if grep -q "$DOCKER_REPO/$IMAGE" "$F"
      then
        set +e
        GSED="$(which gsed)"
        set -e
        if [ -x "$GSED" ]
        then
          SED=gsed
        else
          SED=sed
        fi
        grep -nA1 "$DOCKER_REPO/$IMAGE" "$F" | \
          grep tag: | \
          $SED -r 's/^([0-9]+)-( *tag: )(.+)$/'$SED' -i"" '"'"'\1s\/tag: .*\/tag: "'$VERSION'"\/'"'"' /' | \
          awk '{print $0"'$F'"}' | \
          sh && info "Updated image tag in $F"
      else
        info "Container not listed in $F"
      fi

      if [ -n "$PUSH" ]
      then
        kproject container push "$CONTAINER_PATH"
      fi

    else
      echo "No Dockerfile in $CONTAINER_PATH" 1>&2
    fi
  fi
done



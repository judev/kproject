#!/usr/bin/env bash

set -eo pipefail

command cd "$PROJECT_ROOT_PATH/private/$ENVIRONMENT_NAME"

secrets_deploy_all() {
  for SECRET_PATH in "$PROJECT_ROOT_PATH/private/$ENVIRONMENT_NAME"/*.gpg
  do
    secrets_deploy_path "$SECRET_PATH"
  done
}

secrets_deploy_changed() {
  for SECRET_PATH in $(kproject secrets changed | grep -F .gpg)
  do
    secrets_deploy_path "$SECRET_PATH"
  done
}

secrets_deploy_path() {
  local SECRET_PATH=$1
  base=$(basename "$SECRET_PATH")
  base=${base%.gpg}
  base=${base%.properties}

  set +e
  kubectl delete secret "$base" > /dev/null 2>&1
  set -e

  if [ -d "$SECRET_PATH" ]
  then

    local args=""
    for fn in "$SECRET_PATH"/*
    do
      f=$fn
      f=${f%.gpg}
      f=${f%.properties}
      args="$args --from-file=${f#$SECRET_PATH/}=<(blackbox_cat "$fn" | grep --text -v shred_file:)"
    done
    eval kubectl create secret generic "$base" $args

  else

    if ! grep -q '.gpg$' <<<"$SECRET_PATH"
    then
      SECRET_PATH="$SECRET_PATH".gpg
    fi

    if grep -qF .properties.gpg <<<"$SECRET_PATH"
    then
      kubectl create secret generic "$base" $(__secrets_build_args "$SECRET_PATH")
    else
      kubectl create secret generic "$base" --from-file="$base"=<(blackbox_cat "${SECRET_PATH#$(pwd)/}" | grep --text -v shred_file:)
    fi

  fi

}

__secrets_build_args() {
  local SECRET_PATH="$1"
  local args=""
  local keypair
  for keypair in $(blackbox_cat "${SECRET_PATH#$(pwd)/}" | grep --text -v shred_file:)
  do
    args="$args --from-literal=$keypair"
  done
  echo "$args"
}

if test -z "$@"
then
  secrets_deploy_changed
elif grep -qF -- '--all' <<<"$@"
then
  secrets_deploy_all
else
  for SECRET_PATH in "$@"
  do
    secrets_deploy_path "$SECRET_PATH"
  done
fi


